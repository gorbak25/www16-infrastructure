apiVersion: apps/v1
kind: Deployment
metadata:
  name: www16-user-$WWW_USER
  namespace: www16-intranet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: www16-user-$WWW_USER
  template:
    metadata:
      labels:
        app: www16-user-$WWW_USER
    spec:
      automountServiceAccountToken: false
      containers:
        - name: www16-user
          image: k8s.gcr.io/pause
          imagePullPolicy: "IfNotPresent"
          command: [ "/lib/systemd/systemd", "--unit=multi-user.target" ]
          env:
            - name: CONTAINER
              value: docker
          resources:
            # TODO: Is this reasonable?
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - mountPath: /tmp
              name: root-tmp
            - mountPath: /run
              name: root-run
            - mountPath: /sys/fs/cgroup
              name: cgroup
              readOnly: true
            - mountPath: /bin
              name: root
              subPath: bin
            - mountPath: /boot
              name: root
              subPath: boot
            - mountPath: /etc
              name: root
              subPath: etc
            - mountPath: /home
              name: root
              subPath: home
            - mountPath: /lib
              name: root
              subPath: lib
            - mountPath: /lib64
              name: root
              subPath: lib64
            - mountPath: /opt
              name: root
              subPath: opt
            - mountPath: /root
              name: root
              subPath: root
            - mountPath: /sbin
              name: root
              subPath: sbin
            - mountPath: /srv
              name: root
              subPath: srv
            - mountPath: /usr
              name: root
              subPath: usr
            - mountPath: /var
              name: root
              subPath: var
          securityContext:
            privileged: false
            procMount: Default
            # or else sudo won't work :P
            #allowPrivilegeEscalation: false
      volumes:
        - name: root
          hostPath:
            path: $WWW_USER_ROOTFS
            type: Directory
        - name: root-tmp
          emptyDir:
            medium: Memory
        - name: root-run
          emptyDir:
            medium: Memory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  name: www16-user-$WWW_USER
  namespace: www16-intranet
spec:
  clusterIP: None
  selector:
    app: www16-user-$WWW_USER
  ports:
  - name: http
    port: 80
